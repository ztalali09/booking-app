#!/usr/bin/env node

/**
 * Script de test des restrictions Gmail
 * V√©rifie les param√®tres de s√©curit√© Gmail qui pourraient bloquer l'envoi
 */

const nodemailer = require('nodemailer')

console.log('üîç Test des restrictions Gmail\n')
console.log('‚ïê'.repeat(60))

async function testGmailRestrictions() {
  console.log('üìã Configuration Gmail:')
  console.log('‚îÄ'.repeat(40))
  
  const config = {
    host: 'smtp.gmail.com',
    port: 587,
    user: 'londalonda620@gmail.com',
    password: 'rmqd arit aukn vkwi',
    fromName: 'M.Cyril R√©servation'
  }
  
  console.log(`‚úÖ Host: ${config.host}`)
  console.log(`‚úÖ Port: ${config.port}`)
  console.log(`‚úÖ User: ${config.user}`)
  console.log(`‚úÖ Password: ${config.password ? '‚úÖ D√©fini' : '‚ùå Manquant'}`)
  console.log(`‚úÖ From Name: ${config.fromName}`)
  
  console.log('\nüîß Test de connexion SMTP...')
  
  try {
    const transporter = nodemailer.createTransport({
      host: config.host,
      port: config.port,
      secure: false,
      auth: {
        user: config.user,
        pass: config.password,
      },
      connectionTimeout: 10000,
      greetingTimeout: 5000,
      socketTimeout: 10000,
      tls: {
        rejectUnauthorized: false
      },
      pool: false,
      retries: 2,
      retryDelay: 2000
    })
    
    console.log('üîç V√©rification de la connexion SMTP...')
    await transporter.verify()
    console.log('‚úÖ Connexion SMTP r√©ussie!')
    
    console.log('\nüìß Test d\'envoi d\'email simple...')
    
    const testEmail = {
      from: `"${config.fromName}" <${config.user}>`,
      to: config.user,
      subject: 'Test Gmail Restrictions - ' + new Date().toISOString(),
      text: 'Test simple pour v√©rifier les restrictions Gmail',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2d5a27;">Test Gmail Restrictions</h2>
          <p>Cet email teste les restrictions Gmail.</p>
          <p><strong>Timestamp:</strong> ${new Date().toISOString()}</p>
          <p><strong>Configuration:</strong></p>
          <ul>
            <li>Host: ${config.host}</li>
            <li>Port: ${config.port}</li>
            <li>User: ${config.user}</li>
            <li>From Name: ${config.fromName}</li>
          </ul>
        </div>
      `
    }
    
    console.log('üì§ Envoi de l\'email de test...')
    const result = await transporter.sendMail(testEmail)
    
    console.log('‚úÖ Email de test envoy√© avec succ√®s!')
    console.log(`‚úÖ Message ID: ${result.messageId}`)
    console.log(`‚úÖ Response: ${result.response}`)
    console.log(`üìß V√©rifiez votre bo√Æte email: ${config.user}`)
    
    return true
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test Gmail:')
    console.error('‚ùå Message:', error.message)
    console.error('‚ùå Code:', error.code)
    console.error('‚ùå Command:', error.command)
    console.error('‚ùå Response:', error.response)
    
    if (error.code === 'EAUTH') {
      console.log('\nüîß Probl√®me d\'authentification Gmail:')
      console.log('   1. V√©rifiez que la validation en 2 √©tapes est activ√©e')
      console.log('   2. R√©g√©n√©rez le mot de passe d\'application')
      console.log('   3. Utilisez le mot de passe d\'application, pas votre mot de passe normal')
      console.log('   4. V√©rifiez que "Acc√®s moins s√©curis√©" est d√©sactiv√©')
    }
    
    if (error.code === 'ECONNECTION') {
      console.log('\nüîß Probl√®me de connexion:')
      console.log('   1. V√©rifiez que le port 587 n\'est pas bloqu√©')
      console.log('   2. V√©rifiez les param√®tres de s√©curit√© Gmail')
      console.log('   3. V√©rifiez que "Acc√®s moins s√©curis√©" est d√©sactiv√©')
    }
    
    if (error.code === 'EMESSAGE') {
      console.log('\nüîß Probl√®me de message:')
      console.log('   1. V√©rifiez le format de l\'email')
      console.log('   2. V√©rifiez les restrictions de contenu')
    }
    
    return false
  }
}

async function runGmailTest() {
  console.log('üöÄ Test Gmail - Restrictions et Configuration\n')
  console.log('‚ïê'.repeat(60))
  
  const success = await testGmailRestrictions()
  
  console.log('\nüìä R√âSULTAT DU TEST GMAIL')
  console.log('‚ïê'.repeat(60))
  
  if (success) {
    console.log('‚úÖ CONFIGURATION GMAIL FONCTIONNELLE!')
    console.log('üìß L\'email de test a √©t√© envoy√© avec succ√®s.')
    console.log('')
    console.log('üéØ Prochaines √©tapes:')
    console.log('   1. V√©rifiez votre bo√Æte email')
    console.log('   2. Si vous ne recevez pas l\'email, v√©rifiez les spams')
    console.log('   3. Le probl√®me pourrait √™tre dans le code de l\'application')
  } else {
    console.log('‚ùå PROBL√àME GMAIL D√âTECT√â!')
    console.log('üîß Actions √† effectuer:')
    console.log('   1. V√©rifiez la configuration Gmail')
    console.log('   2. R√©g√©n√©rez le mot de passe d\'application')
    console.log('   3. V√©rifiez les param√®tres de s√©curit√©')
    console.log('   4. D√©sactivez "Acc√®s moins s√©curis√©"')
  }
  
  console.log('\nüìã V√âRIFICATIONS GMAIL RECOMMAND√âES:')
  console.log('   1. Aller sur https://myaccount.google.com/security')
  console.log('   2. V√©rifier que "Validation en 2 √©tapes" est activ√©e')
  console.log('   3. Aller sur "Mots de passe des applications"')
  console.log('   4. Cr√©er un nouveau mot de passe d\'application')
  console.log('   5. V√©rifier que "Acc√®s moins s√©curis√©" est D√âSACTIV√â')
}

// Ex√©cuter le test
runGmailTest().catch(console.error)
